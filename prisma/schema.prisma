// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id       String    @id @default(uuid())
  name     String
  slug     String
  imageURL String
  products Product[]

  @@index([slug])
}

model Product {
  id                 String        @id @default(uuid())
  name               String
  slug               String
  imageURLs          String[]
  description        String
  basePrice          Decimal       @db.Decimal(8, 2)
  categoryId         String
  category           Category      @relation(fields: [categoryId], references: [id])
  discountPercentage Int           @default(0)
  userProduct        UserProduct[]
  userCart           UserCart[]

  @@index([discountPercentage])
  @@index([basePrice])
  @@index([name])
  @@index([slug])
}

model UserProduct {
  id           String   @id @default(uuid())
  productId    String
  product      Product  @relation(fields: [productId], references: [id])
  userId       String
  user         User     @relation(fields: [userId], references: [id])
  totalPaid    Decimal  @db.Decimal(8, 2)
  quantity     Int      @default(1)
  purchaseDate DateTime @default(now())
}

model UserCart {
  id        String  @id @default(uuid())
  productId String
  product   Product @relation(fields: [productId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  quantity  Int     @default(1)

  @@index([userId])
  @@index([productId])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String        @id @default(cuid())
  name          String?
  email         String?       @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  userProduct   UserProduct[]
  userCart      UserCart[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
